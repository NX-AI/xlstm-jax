# @package _global_
defaults:
  - /data@data_train.ds1: dclm_arrayrecord_train
  - /data@data_eval.ds1: slimpajama_627B_arrayrecord_eval_preprocessed
  - /data@data_eval.ds2: dclm_arrayrecord_eval_preprocessed
  - override /parallel: mLSTMv1_7B
  - override /model: mLSTMv1_7B
  - override /optimizer: adamw
  - override /profiling: jax_profiling
  - override /hydra/launcher: slurm_launcher
  - _self_

# specify the deltas from the defaults:
task_name: DCLM
batch_size_per_device: 2
context_length: 8192
num_epochs: 1000
num_train_steps: 500_000
lr: 4e-4

scheduler:
  warmup_steps: 3_000

trainer:
  gradient_accumulate_steps: 1
  check_val_every_n_steps: 2_500
  log_logit_stats: false
  log_intermediates: false
  seed: 0

checkpointing:
  max_to_keep: null
  monitor: null

data_train:
  ds1:
    tokenizer_path: "EleutherAI/gpt-neox-20b"
    data_shuffle_seed: 0

data_eval:
  ds1:
    tokenizer_path: "EleutherAI/gpt-neox-20b"
  ds2:
    tokenizer_path: "EleutherAI/gpt-neox-20b"

model:
  reset_at_document_boundaries: true
  vocab_size: -1
  num_heads: 8

profiling:
  # Not profiling to reduce time and potential failure points.
  profile_every_n_minutes: -1

# Run command:
# PYTHONPATH=. python scripts/train_with_hydra.py +experiment=train_mLSTMv1_7B_dclm_long_run.yaml
hydra:
  launcher:
    nodes: 32
    additional_parameters: {
      "gpu-bind": "closest",
      "wait-all-nodes": "1",
      "time": "21-00:00:00",
      "exclusive": "",
      "reservation": "xLSTM7B",
    }
  mode: MULTIRUN
